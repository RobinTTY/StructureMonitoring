"use strict";
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
Object.defineProperty(exports, "__esModule", { value: true });
const log = require("./log");
/**
 * Describes the operations that can be performed on the amqp message properties.
 * @module MessageProperties
 */
var MessageProperties;
(function (MessageProperties) {
    /**
     * Converts MessageProperties to AmqpMessageProperties.
     * @param {MessageProperties} props Message properties.
     * @returns {AmqpMessageProperties} AmqpMessageProperties.
     */
    function toAmqpMessageProperties(props) {
        const amqpProperties = {};
        if (props.absoluteExpiryTime != undefined)
            amqpProperties.absolute_expiry_time = props.absoluteExpiryTime;
        if (props.contentEncoding != undefined)
            amqpProperties.content_encoding = props.contentEncoding;
        if (props.contentType != undefined)
            amqpProperties.content_type = props.contentType;
        if (props.correlationId != undefined)
            amqpProperties.correlation_id = props.correlationId;
        if (props.creationTime != undefined)
            amqpProperties.creation_time = props.creationTime;
        if (props.groupId != undefined)
            amqpProperties.group_id = props.groupId;
        if (props.groupSequence != undefined)
            amqpProperties.group_sequence = props.groupSequence;
        if (props.messageId != undefined)
            amqpProperties.message_id = props.messageId;
        if (props.replyTo != undefined)
            amqpProperties.reply_to = props.replyTo;
        if (props.replyToGroupId != undefined)
            amqpProperties.reply_to_group_id = props.replyToGroupId;
        if (props.subject != undefined)
            amqpProperties.subject = props.subject;
        if (props.to != undefined)
            amqpProperties.to = props.to;
        if (props.userId != undefined)
            amqpProperties.user_id = props.userId;
        log.msgProperties("To AmqpMessageProperties: %O", amqpProperties);
        return amqpProperties;
    }
    MessageProperties.toAmqpMessageProperties = toAmqpMessageProperties;
    /**
     * Converts AmqpMessageProperties to MessageProperties.
     * @param {AmqpMessageProperties} props Amqp message properties.
     * @returns {MessageProperties} MessageProperties.
     */
    function fromAmqpMessageProperties(props) {
        const msgProperties = {};
        if (props.absolute_expiry_time != undefined)
            msgProperties.absoluteExpiryTime = props.absolute_expiry_time;
        if (props.content_encoding != undefined)
            msgProperties.contentEncoding = props.content_encoding;
        if (props.content_type != undefined)
            msgProperties.contentType = props.content_type;
        if (props.correlation_id != undefined)
            msgProperties.correlationId = props.correlation_id;
        if (props.creation_time != undefined)
            msgProperties.creationTime = props.creation_time;
        if (props.group_id != undefined)
            msgProperties.groupId = props.group_id;
        if (props.group_sequence != undefined)
            msgProperties.groupSequence = props.group_sequence;
        if (props.message_id != undefined)
            msgProperties.messageId = props.message_id;
        if (props.reply_to != undefined)
            msgProperties.replyTo = props.reply_to;
        if (props.reply_to_group_id != undefined)
            msgProperties.replyToGroupId = props.reply_to_group_id;
        if (props.subject != undefined)
            msgProperties.subject = props.subject;
        if (props.to != undefined)
            msgProperties.to = props.to;
        if (props.user_id != undefined)
            msgProperties.userId = props.user_id;
        log.msgProperties("From AmqpMessageProperties: %O", msgProperties);
        return msgProperties;
    }
    MessageProperties.fromAmqpMessageProperties = fromAmqpMessageProperties;
})(MessageProperties = exports.MessageProperties || (exports.MessageProperties = {}));
//# sourceMappingURL=messageProperties.js.map