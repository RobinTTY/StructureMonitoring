"use strict";
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
Object.defineProperty(exports, "__esModule", { value: true });
exports.partitionKey = "x-opt-partition-key";
exports.sequenceNumber = "x-opt-sequence-number";
exports.enqueueSequenceNumber = "x-opt-enqueue-sequence-number";
exports.enqueuedTime = "x-opt-enqueued-time";
exports.scheduledEnqueueTime = "x-opt-scheduled-enqueue-time";
exports.offset = "x-opt-offset";
exports.lockedUntil = "x-opt-locked-until";
exports.partitionIdName = "x-opt-partition-id";
exports.publisher = "x-opt-publisher-name";
exports.viaPartitionKey = "x-opt-via-partition-key";
exports.deadLetterSource = "x-opt-deadletter-source";
exports.enqueuedTimeAnnotation = `amqp.annotation.${exports.enqueuedTime}`;
exports.offsetAnnotation = `amqp.annotation.${exports.offset}`;
exports.sequenceNumberAnnotation = `amqp.annotation.${exports.sequenceNumber}`;
exports.guidSize = 16;
exports.message = "message";
exports.error = "error";
exports.statusCode = "status-code";
exports.statusDescription = "status-description";
exports.errorCondition = "error-condition";
exports.management = "$management";
exports.partition = "partition";
exports.partitionId = "partitionId";
exports.readOperation = "READ";
exports.TLS = "tls";
exports.establishConnection = "establishConnection";
exports.defaultConsumerGroup = "$default";
exports.eventHub = "eventhub";
exports.cbsEndpoint = "$cbs";
exports.cbsReplyTo = "cbs";
exports.operationPutToken = "put-token";
exports.aadEventHubsAudience = "https://eventhubs.azure.net/";
exports.maxUserAgentLength = 128;
exports.vendorString = "com.microsoft";
exports.attachEpoch = `${exports.vendorString}:epoch`;
exports.receiverIdentifierName = `${exports.vendorString}:receiver-name`;
exports.enableReceiverRuntimeMetricName = `${exports.vendorString}:enable-receiver-runtime-metric`;
exports.timespan = `${exports.vendorString}:timespan`;
exports.uri = `${exports.vendorString}:uri`;
exports.dateTimeOffset = `${exports.vendorString}:datetime-offset`;
exports.sessionFilterName = `${exports.vendorString}:session-filter`;
exports.receiverError = "receiver_error";
exports.senderError = "sender_error";
exports.sessionError = "session_error";
exports.connectionError = "connection_error";
exports.defaultOperationTimeoutInSeconds = 60;
exports.managementRequestKey = "managementRequest";
exports.negotiateCbsKey = "negotiateCbs";
exports.negotiateClaim = "negotiateClaim";
exports.ensureContainerAndBlob = "ensureContainerAndBlob";
exports.defaultPrefetchCount = 1000;
exports.reconnectLimit = 100;
exports.maxMessageIdLength = 128;
exports.maxPartitionKeyLength = 128;
exports.maxSessionIdLength = 128;
exports.pathDelimiter = "/";
exports.ruleNameMaximumLength = 50;
exports.maximumSqlFilterStatementLength = 1024;
exports.maximumSqlRuleActionStatementLength = 1024;
exports.maxDeadLetterReasonLength = 4096;
// https://stackoverflow.com/questions/11526504/minimum-and-maximum-date for js
// However we are setting this to the TimeSpan.MaxValue of C#.
exports.maxDurationValue = 922337203685477;
exports.minDurationValue = -922337203685477;
// https://github.com/Azure/azure-amqp/blob/master/Microsoft.Azure.Amqp/Amqp/AmqpConstants.cs#L47
exports.maxAbsoluteExpiryTime = new Date("9999-12-31T07:59:59.000Z").getTime();
exports.aadTokenValidityMarginSeconds = 5;
exports.connectionReconnectDelay = 300;
exports.defaultRetryAttempts = 3;
exports.defaultConnectionRetryAttempts = 150;
exports.defaultDelayBetweenOperationRetriesInSeconds = 5;
exports.defaultDelayBetweenRetriesInSeconds = 15;
exports.receiverSettleMode = "receiver-settle-mode";
exports.dispositionStatus = "disposition-status";
exports.fromSequenceNumber = "from-sequence-number";
exports.messageCount = "message-count";
exports.lockTokens = "lock-tokens";
exports.messageIdMapKey = "message-id";
exports.sequenceNumberMapKey = "sequence-number";
exports.lockTokenMapKey = "lock-token";
exports.sessionIdMapKey = "session-id";
exports.sequenceNumbers = "sequence-numbers";
exports.deadLetterReason = "deadletter-reason";
exports.deadLetterDescription = "deadletter-description";
exports.propertiesToModify = "properties-to-modify";
exports.deadLetterName = "com.microsoft:dead-letter";
exports.trackingId = "com.microsoft:tracking-id";
exports.serverTimeout = "com.microsoft:server-timeout";
exports.operations = {
    putToken: "put-token",
    read: "READ",
    cancelScheduledMessage: "com.microsoft:cancel-scheduled-message",
    scheduleMessage: "com.microsoft:schedule-message",
    renewLock: "com.microsoft:renew-lock",
    peekMessage: "com.microsoft:peek-message",
    receiveBySequenceNumber: "com.microsoft:receive-by-sequence-number",
    updateDisposition: "com.microsoft:update-disposition",
    renewSessionLock: "com.microsoft:renew-session-lock",
    setSessionState: "com.microsoft:set-session-state",
    getSessionState: "com.microsoft:get-session-state",
    enumerateSessions: "com.microsoft:get-message-sessions",
    addRule: "com.microsoft:add-rule",
    removeRule: "com.microsoft:remove-rule",
    enumerateRules: "com.microsoft:enumerate-rules"
};
//# sourceMappingURL=constants.js.map